plugins {
    id 'java'
    id 'war'
    id 'com.github.node-gradle.node' version '7.0.2'
}

group 'ru.itmo.se'
version '1.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.13.2'
}

var lombokVersion = '1.18.40'
var mapstructVersion = '1.6.3'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

dependencies {
    compileOnly('jakarta.platform:jakarta.jakartaee-web-api:10.0.0')
    implementation('org.eclipse.persistence:org.eclipse.persistence.jpa:4.0.8')

    compileOnly('org.postgresql:postgresql:42.7.7')

    implementation("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    implementation("org.mapstruct:mapstruct:${mapstructVersion}")
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

// Node.js configuration
node {
    version = '20.19.0'
    npmVersion = '10.2.4'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
}

// Task to install npm dependencies for frontend
task frontendNpmInstall(type: NpmTask) {
    workingDir = file("${project.projectDir}/frontend")
    args = ['install']
}

// Task to build frontend
task frontendBuild(type: NpmTask) {
    dependsOn frontendNpmInstall
    workingDir = file("${project.projectDir}/frontend")
    args = ['run', 'build']
}

// Task to copy frontend dist to webapp
task copyFrontendToWebapp(type: Copy) {
    dependsOn frontendBuild
    from "${project.projectDir}/frontend/dist"
    into "${project.buildDir}/webapp"
}

// Configure WAR task to include frontend
war {
    dependsOn copyFrontendToWebapp
    from "${project.buildDir}/webapp"
}

// Make build task depend on frontend build
build {
    dependsOn copyFrontendToWebapp
}

// Task to deploy WAR to server via SSH
task deployWAR(type: Exec) {
    dependsOn war
    commandLine 'scp', '-P', '2222', "${project.buildDir}/libs/${project.name}-${project.version}.war", 's412939@helios.cs.ifmo.ru:~/'
    
    doLast {
        println "WAR file deployed to server successfully!"
    }
}

// Task to deploy frontend dist to server
task deployFrontend(type: Exec) {
    dependsOn frontendBuild
    commandLine 'scp', '-r', '-P', '2222', "${project.projectDir}/frontend/dist/", 's412939@helios.cs.ifmo.ru:~/'
    
    doLast {
        println "Frontend dist folder deployed to server successfully!"
    }
}

// Main deploy task that deploys both WAR and frontend
task deploy {
    dependsOn deployWAR, deployFrontend
    
    doLast {
        println "Both WAR file and frontend deployed to server successfully!"
    }
}